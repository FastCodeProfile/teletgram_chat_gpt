import asyncio
from os import getenv
from contextlib import suppress

from dotenv import load_dotenv
from aiogram.types import Message
from aiogram import Bot, Dispatcher
from aiogram.filters import Command, CommandStart

from utils import ChatGPT, DBDialog


async def main():
    dp = Dispatcher()  # –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Dispatcher
    db_dialog = DBDialog()  # –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ DBDialog
    db_dialog.add_dialog('0', '–°–∏—Å—Ç–µ–º–∞')  # –°–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥
    chat_gpt = ChatGPT(getenv('GPT_TOKEN'))  # –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ ChatGPT
    bot = Bot(getenv('TG_TOKEN'), parse_mode='HTML')  # –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Bot

    @dp.message(CommandStart())
    async def handler_command_start(m: Message) -> None:
        system_dialog = db_dialog.get_messages('0')  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        system_dialog.append({"role": "user", "content": "–ö—Ç–æ —Ç—ã –∏ —á–µ–º —Ç—ã –ø–æ–ª–µ–∑–µ–Ω? –û—Ñ–æ—Ä–º–∏ —Ç–µ–∫—Å—Ç —Å–º–∞–π–ª–∏–∫–∞–º–∏."})
        chat_gpt_answer = await chat_gpt.answer(system_dialog)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –≤ Chat GPT
        await m.answer(f'<b>{chat_gpt_answer["choices"][0]["message"]["content"]}</b>')  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    @dp.message(Command('reset'))
    async def handler_command_start(m: Message) -> None:
        user_id = m.from_user.id
        if db_dialog.get_messages(user_id):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
            db_dialog.del_dialog(user_id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        await m.reply('<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω</b> üí¨')

    @dp.message()
    async def handler_chat_gpt(m: Message) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å Chat GPT

        :param m: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message
        :return: None
        """
        user_id = m.from_user.id
        first_name = m.from_user.first_name
        db_dialog.add_dialog(user_id, first_name)  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        db_dialog.add_message(user_id, 'user', m.text)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∏–∞–ª–æ–≥
        user_messages = db_dialog.get_messages(user_id)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        chat_gpt_answer = await chat_gpt.answer(user_messages)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Chat GPT
        db_dialog.add_message(user_id, 'assistant',
                              chat_gpt_answer["choices"][0]["message"]["content"])  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –¥–∏–∞–ª–æ–≥
        await m.reply(chat_gpt_answer["choices"][0]["message"]["content"])  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

        if len(db_dialog.get_messages(user_id)) > 100:  # –ï—Å–ª–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –±–æ–ª—å—à–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
            db_dialog.del_dialog(user_id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥

    await dp.start_polling(bot)


if __name__ == '__main__':
    load_dotenv('../.env')
    with suppress(KeyboardInterrupt):  # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
        asyncio.run(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
